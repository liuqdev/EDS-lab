{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EDS lab \u5b9e\u9a8c\u8bbe\u8ba1\u548c\u6570\u636e\u5904\u7406\u7684\u4f5c\u4e1a\uff0c\u642d\u5efa\u4e86\u4e00\u4e2a\u57fa\u4e8eDjango\u6846\u67b6\u548c\uff0c\u5f00\u6e90\u9879\u76eeWooey\u7684\u53ef\u89c6\u5316\u754c\u9762\uff0c\u7528\u6765\u5c55\u793a\u4f18\u9009\u6cd5\u53ef\u89c6\u5316\u7684\u5b9e\u9a8c\u7ed3\u679c\u3002 UI \u529f\u80fd\u793a\u4f8b \u90e8\u5206\u7ed3\u679c \u5b9e\u9a8c\u65b9\u6cd5\u548c\u8fc7\u7a0b\u53ef\u89c6\u5316\u7ed3\u679c\uff082\u7ef4\uff09 \u5b9e\u9a8c\u65b9\u6cd5\u548c\u8fc7\u7a0b\u53ef\u89c6\u5316\u7ed3\u679c\uff083\u7ef4\uff09 2D 3D \u53cc\u56e0\u7d20\u9009\u5347\u6cd52D \u53cc\u56e0\u7d20\u9009\u5347\u6cd53D \u53cc\u56e0\u7d20\u5bf9\u5f00\u6cd52D \u53cc\u56e0\u7d20\u5e73\u884c\u7ebf\u6cd52D \u5355\u7eaf\u5f62\u6cd52D \u6ce8\uff1a\u56fe\u6807\u9898\u5e76\u975e\u51e0\u79cd\u65b9\u6cd5\u7684\u6807\u51c6\u82f1\u6587\u7ffb\u8bd1\u3002 \u6587\u6863 \u4e2d\u6587\u6587\u6863 \u8bc1\u4e66 BSD","title":"EDS lab"},{"location":"#eds-lab","text":"\u5b9e\u9a8c\u8bbe\u8ba1\u548c\u6570\u636e\u5904\u7406\u7684\u4f5c\u4e1a\uff0c\u642d\u5efa\u4e86\u4e00\u4e2a\u57fa\u4e8eDjango\u6846\u67b6\u548c\uff0c\u5f00\u6e90\u9879\u76eeWooey\u7684\u53ef\u89c6\u5316\u754c\u9762\uff0c\u7528\u6765\u5c55\u793a\u4f18\u9009\u6cd5\u53ef\u89c6\u5316\u7684\u5b9e\u9a8c\u7ed3\u679c\u3002","title":"EDS lab"},{"location":"#ui","text":"","title":"UI"},{"location":"#_1","text":"","title":"\u529f\u80fd\u793a\u4f8b"},{"location":"#_2","text":"\u5b9e\u9a8c\u65b9\u6cd5\u548c\u8fc7\u7a0b\u53ef\u89c6\u5316\u7ed3\u679c\uff082\u7ef4\uff09 \u5b9e\u9a8c\u65b9\u6cd5\u548c\u8fc7\u7a0b\u53ef\u89c6\u5316\u7ed3\u679c\uff083\u7ef4\uff09 2D 3D \u53cc\u56e0\u7d20\u9009\u5347\u6cd52D \u53cc\u56e0\u7d20\u9009\u5347\u6cd53D \u53cc\u56e0\u7d20\u5bf9\u5f00\u6cd52D \u53cc\u56e0\u7d20\u5e73\u884c\u7ebf\u6cd52D \u5355\u7eaf\u5f62\u6cd52D \u6ce8\uff1a\u56fe\u6807\u9898\u5e76\u975e\u51e0\u79cd\u65b9\u6cd5\u7684\u6807\u51c6\u82f1\u6587\u7ffb\u8bd1\u3002","title":"\u90e8\u5206\u7ed3\u679c"},{"location":"#_3","text":"\u4e2d\u6587\u6587\u6863","title":"\u6587\u6863"},{"location":"#_4","text":"BSD","title":"\u8bc1\u4e66"},{"location":"ch01-quickstart/","text":"\u5feb\u901f\u5f00\u59cb 0. \u5b89\u88c5Python\u548c\u76f8\u5173\u4f9d\u8d56 Python - \u63a8\u8350python3.6\u53ca\u4ee5\u4e0a pip - \u63a8\u835018.1\u53ca\u4ee5\u4e0a \u5176\u4ed6\uff1a\u89c1\u6587\u4ef6 requirements.txt \uff0c\u5185\u5bb9\u5982\u4e0b\uff0c\u5b89\u88c5\u8bf7\u89c1\u540e\u6587\uff1a Django wooey django-sslify django-storages django-celery django-autoslug boto waitress psycopg2 collectfast honcho 1. \u8fd0\u884c\u4f7f\u7528 * \u521b\u5efa\u865a\u62df\u73af\u5883\uff08\u975e\u5fc5\u987b\uff0c\u63a8\u8350\uff09 \u4e3a\u4e86\u9632\u6b62\u9879\u76ee\u5de5\u7a0b\u7684\u4f9d\u8d56\u548c\u7528\u6237\u81ea\u5e26\u7684python\u73af\u5883\u76f8\u51b2\u7a81\uff0c\u4f8b\u5982python\u7248\u672c\u4e0d\u4e00\u81f4\u3002\u5efa\u8bae\u4e3a\u5de5\u7a0b\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u521b\u5efa\u65b9\u6cd5\u89c1 virtualenv , \u8fd9\u91cc\u63a8\u8350\u4f7f\u7528 virtualenvwrapper \uff0c\u4e00\u4e2a\u66f4\u5feb\u6377\u7684 virtualenv \u7684\u5c01\u88c5\u6765\u521b\u5efapython3\u7684\u865a\u62df\u73af\u5883\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528 virtualenvwrapper \u521b\u5efa\u4e86\u540d\u79f0\u4e3a wooey \u7684python3\u73af\u5883\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u73af\u5883\u4e0b\u8fd0\u884c\u672c\u9879\u76ee\u3002 2. \u4e0b\u8f7d\u5de5\u7a0b\u4ee3\u7801 \u4e0b\u8f7d\u5730\u5740\uff1a EDS-lab \u4e0b\u8f7d\u540e\u89e3\u538b\uff0c\u8fdb\u5165\u5230 EDS-lab \u8def\u5f84\u4e0b\u3002 3. \u5b89\u88c5\u76f8\u5173\u4f9d\u8d56 \u4f7f\u7528 pip \u5b89\u88c5\u76f8\u5173\u4f9d\u8d56\uff0c requirements.txt \u3002 pip install -r requirements.txt 4. \u8fd0\u884c\u9879\u76ee \u5bf9\u4e8e windows \uff0c\u5728\u5f53\u524d\u8def\u5f84\uff08\u5373 manage.py \u6240\u5728\u7684\u8def\u5f84\uff09\u4e0b\uff0c \u5206\u522b\u542f\u52a8\u4e24\u4e2a\u7ec8\u7aef \uff1a \u7ec8\u7aef1\u8f93\u5165\uff1a celery -A MyWooProject worker --pool=eventlet -l info \u6548\u679c\u5165\u4e0a\u56fe\u6240\u793a\u3002 \u7ec8\u7aef2\u8f93\u5165\uff1a python manage.py runserver 0:8000 \u6ce8\uff1a\u7aef\u53e3\u53f7\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\u3002 \u5bf9\u4e8eLinux\u548c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8bf7\u67e5\u770b \u8fd9\u91cc \u3002 5.\u672c\u5730\u67e5\u770b\u9879\u76ee \u901a\u8fc7\u6b65\u9aa45\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u672c\u5730\u670d\u52a1\u5668\u6765\u8fd0\u884c\u672c\u5de5\u7a0b\u3002 \u4f7f\u7528\u6d4f\u89c8\u5668\uff0c\u8f93\u5165 http://localhost:8000/ ,\u5373\u53ef\u67e5\u770b\u5de5\u7a0b\u3002 6. \u8fd0\u884c\u5b9e\u9a8c\u811a\u672c \u70b9\u51fb\u811a\u672c\u540d\u79f0\uff0c\u8f93\u5165\u76f8\u5173\u53c2\u6570\uff0c\u5373\u53ef\u8fd0\u884c\u3002\u4f8b\u5982\u4e0a\u56fe\u662f\u521b\u5efa\u8ba1\u7b97 [0, 100) \u4ee5\u5185\u6240\u6709\u6b63\u6570\u548c\u7684\u4efb\u52a1\uff0c\u70b9\u51fb\u63d0\u4ea4\uff0c\u4efb\u52a1\u4f1a\u88ab\u6dfb\u52a0\u5230\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u7b49\u5f85\u7247\u523b\uff0c\u7ed3\u679c\u8f93\u51fa\u5230\u754c\u9762\uff0c\u7ed3\u679c\u4ea7\u751f\u7684\u6587\u4ef6\u4ee5\u5217\u8868\u5f62\u5f0f\u9648\u5217\u4e8e\u4e0b\u65b9\u3002 \u8fd0\u884c\u5176\u4ed6\u811a\u672c\u8fc7\u7a0b\u7c7b\u4f3c\u3002","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"ch01-quickstart/#_1","text":"","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"ch01-quickstart/#0-python","text":"Python - \u63a8\u8350python3.6\u53ca\u4ee5\u4e0a pip - \u63a8\u835018.1\u53ca\u4ee5\u4e0a \u5176\u4ed6\uff1a\u89c1\u6587\u4ef6 requirements.txt \uff0c\u5185\u5bb9\u5982\u4e0b\uff0c\u5b89\u88c5\u8bf7\u89c1\u540e\u6587\uff1a Django wooey django-sslify django-storages django-celery django-autoslug boto waitress psycopg2 collectfast honcho","title":"0. \u5b89\u88c5Python\u548c\u76f8\u5173\u4f9d\u8d56"},{"location":"ch01-quickstart/#1","text":"","title":"1. \u8fd0\u884c\u4f7f\u7528"},{"location":"ch01-quickstart/#_2","text":"\u4e3a\u4e86\u9632\u6b62\u9879\u76ee\u5de5\u7a0b\u7684\u4f9d\u8d56\u548c\u7528\u6237\u81ea\u5e26\u7684python\u73af\u5883\u76f8\u51b2\u7a81\uff0c\u4f8b\u5982python\u7248\u672c\u4e0d\u4e00\u81f4\u3002\u5efa\u8bae\u4e3a\u5de5\u7a0b\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u521b\u5efa\u65b9\u6cd5\u89c1 virtualenv , \u8fd9\u91cc\u63a8\u8350\u4f7f\u7528 virtualenvwrapper \uff0c\u4e00\u4e2a\u66f4\u5feb\u6377\u7684 virtualenv \u7684\u5c01\u88c5\u6765\u521b\u5efapython3\u7684\u865a\u62df\u73af\u5883\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528 virtualenvwrapper \u521b\u5efa\u4e86\u540d\u79f0\u4e3a wooey \u7684python3\u73af\u5883\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u73af\u5883\u4e0b\u8fd0\u884c\u672c\u9879\u76ee\u3002","title":"* \u521b\u5efa\u865a\u62df\u73af\u5883\uff08\u975e\u5fc5\u987b\uff0c\u63a8\u8350\uff09"},{"location":"ch01-quickstart/#2","text":"\u4e0b\u8f7d\u5730\u5740\uff1a EDS-lab \u4e0b\u8f7d\u540e\u89e3\u538b\uff0c\u8fdb\u5165\u5230 EDS-lab \u8def\u5f84\u4e0b\u3002","title":"2. \u4e0b\u8f7d\u5de5\u7a0b\u4ee3\u7801"},{"location":"ch01-quickstart/#3","text":"\u4f7f\u7528 pip \u5b89\u88c5\u76f8\u5173\u4f9d\u8d56\uff0c requirements.txt \u3002 pip install -r requirements.txt","title":"3. \u5b89\u88c5\u76f8\u5173\u4f9d\u8d56"},{"location":"ch01-quickstart/#4","text":"\u5bf9\u4e8e windows \uff0c\u5728\u5f53\u524d\u8def\u5f84\uff08\u5373 manage.py \u6240\u5728\u7684\u8def\u5f84\uff09\u4e0b\uff0c \u5206\u522b\u542f\u52a8\u4e24\u4e2a\u7ec8\u7aef \uff1a \u7ec8\u7aef1\u8f93\u5165\uff1a celery -A MyWooProject worker --pool=eventlet -l info \u6548\u679c\u5165\u4e0a\u56fe\u6240\u793a\u3002 \u7ec8\u7aef2\u8f93\u5165\uff1a python manage.py runserver 0:8000 \u6ce8\uff1a\u7aef\u53e3\u53f7\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\u3002 \u5bf9\u4e8eLinux\u548c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8bf7\u67e5\u770b \u8fd9\u91cc \u3002","title":"4. \u8fd0\u884c\u9879\u76ee"},{"location":"ch01-quickstart/#5","text":"\u901a\u8fc7\u6b65\u9aa45\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u672c\u5730\u670d\u52a1\u5668\u6765\u8fd0\u884c\u672c\u5de5\u7a0b\u3002 \u4f7f\u7528\u6d4f\u89c8\u5668\uff0c\u8f93\u5165 http://localhost:8000/ ,\u5373\u53ef\u67e5\u770b\u5de5\u7a0b\u3002","title":"5.\u672c\u5730\u67e5\u770b\u9879\u76ee"},{"location":"ch01-quickstart/#6","text":"\u70b9\u51fb\u811a\u672c\u540d\u79f0\uff0c\u8f93\u5165\u76f8\u5173\u53c2\u6570\uff0c\u5373\u53ef\u8fd0\u884c\u3002\u4f8b\u5982\u4e0a\u56fe\u662f\u521b\u5efa\u8ba1\u7b97 [0, 100) \u4ee5\u5185\u6240\u6709\u6b63\u6570\u548c\u7684\u4efb\u52a1\uff0c\u70b9\u51fb\u63d0\u4ea4\uff0c\u4efb\u52a1\u4f1a\u88ab\u6dfb\u52a0\u5230\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u7b49\u5f85\u7247\u523b\uff0c\u7ed3\u679c\u8f93\u51fa\u5230\u754c\u9762\uff0c\u7ed3\u679c\u4ea7\u751f\u7684\u6587\u4ef6\u4ee5\u5217\u8868\u5f62\u5f0f\u9648\u5217\u4e8e\u4e0b\u65b9\u3002 \u8fd0\u884c\u5176\u4ed6\u811a\u672c\u8fc7\u7a0b\u7c7b\u4f3c\u3002","title":"6. \u8fd0\u884c\u5b9e\u9a8c\u811a\u672c"},{"location":"ch02-admin/","text":"\u7ba1\u7406\u548c\u8fd0\u884c \u672c\u9879\u76ee\u7684\u540e\u53f0\u7cfb\u7edf\u662f\u57fa\u4e8eDjango\u7684\uff0c\u8fd9\u91cc\u5df2\u7ecf\u4e3a\u60a8\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u6237\uff1a \u7528\u6237\u540d admin \u5bc6\u7801 ADMIN12345678 \u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u7528\u6237\u540d\u548c\u5bc6\u7801\u6765\u6267\u884c\u76f8\u5173\u7ba1\u7406\u5de5\u4f5c\uff0c\u5176\u4e2d\u5305\u62ec\u521b\u5efa\u65b0\u7684\u7528\u6237\u3002 1.\u521b\u5efa\u8d85\u7ea7\u7528\u6237 \u8d85\u7ea7\u7528\u6237\u5373\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u8fd9\u91cc\u548c\u6240\u6709django\u9879\u76ee\u4e00\u6837\uff0c\u5728\u540e\u53f0\u4e2d\u8f93\u5165 createsuperuser \u8fdb\u884c\u7ba1\u7406\u5458\u7684\u521b\u5efa\u3002 2. \u6ce8\u518c\u3001\u767b\u5f55\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf \u4e24\u79cd\u65b9\u5f0f\u767b\u5f55\uff1a \u5728\u7528\u6237\u754c\u9762\u53f3\u4e0a\u89d2\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801 \u6216\u8005\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165 ip:\u7aef\u53e3\u53f7/admin \uff0c\u8f93\u5165\u7528\u6237\u540d\u6216\u5bc6\u7801\u767b\u5f55\u3002 \u7cfb\u7edf\u4e5f\u652f\u6301\u6ce8\u518c\u65b0\u7528\u6237\u5e76\u767b\u5f55\u3002 3. \u7528\u6237\u7ba1\u7406 \u5982\u4e0a\u56fe\u6240\u793a\u53ef\u5728\u540e\u53f0\u8fdb\u884c\u7528\u6237\u7ba1\u7406\u3002 4. \u811a\u672c\u7ba1\u7406 5. \u589e\u52a0\u811a\u672c \u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u589e\u52a0\u811a\u672c\u3002\u7b2c\u4e00\u79cd\u65b9\u5f0f\u901a\u8fc7\u540e\u53f0\u6765\u6dfb\u52a0\uff08\u4e0d\u63a8\u8350\uff0c\u6ca1\u529e\u6cd5\u6dfb\u52a0\u7edd\u5bf9\u8def\u5f84\uff0cchecksum\u65e0\u6cd5\u8ba1\u7b97\uff0c\u4ece\u800c\u65e0\u6cd5\u6dfb\u52a0\u6210\u529f\uff09\u3002 \u53e6\u5916\u4e00\u79cd\u901a\u8fc7\u7ec8\u7aef\u6765\u6dfb\u52a0\uff0c\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165: python manage.py addscript [path-to-script/]script.py \u5373 addscript \u540e\u63a5\u811a\u672c\u7684\u8def\u5f84\uff0c\u51fa\u73b0 Concerted 1 scripts \u8868\u660e\u6dfb\u52a0\u6210\u529f\u3002 \u7279\u522b\u6ce8\u610f \uff1a \u6dfb\u52a0\u7684\u811a\u672c\u4e2d\u4e0d\u80fd\u542b\u6709\u4e2d\u6587\uff0c \u5305\u62ec\u6ce8\u91ca \u4e2d\u90fd\u4e0d\u80fd\u6709\u4e2d\u6587\u7b49\u5176\u4ed6\u5b57\u7b26\u3002 \u8fdb\u5165\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u4e2d\uff0c\u53d1\u73b0\u811a\u672c\u88ab\u6210\u529f\u6dfb\u52a0\u4e86\u8fdb\u6765\uff0c\u70b9\u51fb\u8fdb\u5165\u540e\u53ef\u4ee5\u4fee\u6539\u811a\u672c\u4fe1\u606f\uff08\u975e\u6e90\u7a0b\u5e8f\uff09\u3002 \u67e5\u770b\u7ad9\u70b9\uff0c\u53d1\u73b0\u6709\u65b0\u7684\u811a\u672c\u88ab\u6dfb\u52a0\u8fdb\u6765\u3002 6. \u8fd0\u884c\u811a\u672c \u8fd0\u884c\u65b0\u811a\u672c\uff0c\u7ed3\u679c\u5982\u4e0a\u56fe\u3002","title":"\u7ba1\u7406\u548c\u8fd0\u884c"},{"location":"ch02-admin/#_1","text":"\u672c\u9879\u76ee\u7684\u540e\u53f0\u7cfb\u7edf\u662f\u57fa\u4e8eDjango\u7684\uff0c\u8fd9\u91cc\u5df2\u7ecf\u4e3a\u60a8\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u6237\uff1a \u7528\u6237\u540d admin \u5bc6\u7801 ADMIN12345678 \u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u7528\u6237\u540d\u548c\u5bc6\u7801\u6765\u6267\u884c\u76f8\u5173\u7ba1\u7406\u5de5\u4f5c\uff0c\u5176\u4e2d\u5305\u62ec\u521b\u5efa\u65b0\u7684\u7528\u6237\u3002","title":"\u7ba1\u7406\u548c\u8fd0\u884c"},{"location":"ch02-admin/#1","text":"\u8d85\u7ea7\u7528\u6237\u5373\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u8fd9\u91cc\u548c\u6240\u6709django\u9879\u76ee\u4e00\u6837\uff0c\u5728\u540e\u53f0\u4e2d\u8f93\u5165 createsuperuser \u8fdb\u884c\u7ba1\u7406\u5458\u7684\u521b\u5efa\u3002","title":"1.\u521b\u5efa\u8d85\u7ea7\u7528\u6237"},{"location":"ch02-admin/#2","text":"\u4e24\u79cd\u65b9\u5f0f\u767b\u5f55\uff1a \u5728\u7528\u6237\u754c\u9762\u53f3\u4e0a\u89d2\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801 \u6216\u8005\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165 ip:\u7aef\u53e3\u53f7/admin \uff0c\u8f93\u5165\u7528\u6237\u540d\u6216\u5bc6\u7801\u767b\u5f55\u3002 \u7cfb\u7edf\u4e5f\u652f\u6301\u6ce8\u518c\u65b0\u7528\u6237\u5e76\u767b\u5f55\u3002","title":"2. \u6ce8\u518c\u3001\u767b\u5f55\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf"},{"location":"ch02-admin/#3","text":"\u5982\u4e0a\u56fe\u6240\u793a\u53ef\u5728\u540e\u53f0\u8fdb\u884c\u7528\u6237\u7ba1\u7406\u3002","title":"3. \u7528\u6237\u7ba1\u7406"},{"location":"ch02-admin/#4","text":"","title":"4. \u811a\u672c\u7ba1\u7406"},{"location":"ch02-admin/#5","text":"\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u589e\u52a0\u811a\u672c\u3002\u7b2c\u4e00\u79cd\u65b9\u5f0f\u901a\u8fc7\u540e\u53f0\u6765\u6dfb\u52a0\uff08\u4e0d\u63a8\u8350\uff0c\u6ca1\u529e\u6cd5\u6dfb\u52a0\u7edd\u5bf9\u8def\u5f84\uff0cchecksum\u65e0\u6cd5\u8ba1\u7b97\uff0c\u4ece\u800c\u65e0\u6cd5\u6dfb\u52a0\u6210\u529f\uff09\u3002 \u53e6\u5916\u4e00\u79cd\u901a\u8fc7\u7ec8\u7aef\u6765\u6dfb\u52a0\uff0c\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165: python manage.py addscript [path-to-script/]script.py \u5373 addscript \u540e\u63a5\u811a\u672c\u7684\u8def\u5f84\uff0c\u51fa\u73b0 Concerted 1 scripts \u8868\u660e\u6dfb\u52a0\u6210\u529f\u3002 \u7279\u522b\u6ce8\u610f \uff1a \u6dfb\u52a0\u7684\u811a\u672c\u4e2d\u4e0d\u80fd\u542b\u6709\u4e2d\u6587\uff0c \u5305\u62ec\u6ce8\u91ca \u4e2d\u90fd\u4e0d\u80fd\u6709\u4e2d\u6587\u7b49\u5176\u4ed6\u5b57\u7b26\u3002 \u8fdb\u5165\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u4e2d\uff0c\u53d1\u73b0\u811a\u672c\u88ab\u6210\u529f\u6dfb\u52a0\u4e86\u8fdb\u6765\uff0c\u70b9\u51fb\u8fdb\u5165\u540e\u53ef\u4ee5\u4fee\u6539\u811a\u672c\u4fe1\u606f\uff08\u975e\u6e90\u7a0b\u5e8f\uff09\u3002 \u67e5\u770b\u7ad9\u70b9\uff0c\u53d1\u73b0\u6709\u65b0\u7684\u811a\u672c\u88ab\u6dfb\u52a0\u8fdb\u6765\u3002","title":"5. \u589e\u52a0\u811a\u672c"},{"location":"ch02-admin/#6","text":"\u8fd0\u884c\u65b0\u811a\u672c\uff0c\u7ed3\u679c\u5982\u4e0a\u56fe\u3002","title":"6. \u8fd0\u884c\u811a\u672c"},{"location":"ch03-features/","text":"\u529f\u80fd\u7279\u6027 \u53ef\u4ee5\u8fd0\u884c\u4efb\u4f55python\u811a\u672c \u811a\u672c\u53c2\u6570\u53ef\u8c03\u6574 \u811a\u672c\u53ef\u91cd\u590d\u8fd0\u884c\uff0c\u53ef\u67e5\u770b\u7ba1\u7406\u5386\u53f2\u7ed3\u679c \u826f\u597d\u7684\u4ea4\u4e92\uff0c\u7f8e\u89c2\u7684\u754c\u9762 \u826f\u597d\u7684\u7b97\u6cd5\u53ef\u89c6\u5316\u6548\u679c \u65b9\u4fbf\u7684\u540e\u53f0\u7ba1\u7406 \u57fa\u4e8eB/S\uff0c\u90e8\u7f72\u540e\u968f\u5904\u53ef\u8bbf\u95ee \u652f\u6301\u591a\u7528\u6237\u8bbf\u95ee\uff0c\u8fd0\u884c\u7ed3\u679c\u4e92\u4e0d\u5e72\u6270 \u5b8c\u5168\u5f00\u6e90\uff0c\u65b9\u4fbf\u6269\u5c55\u5f00\u53d1 \u8fd0\u884c\u7ed3\u679c\u6587\u4ef6\u8f7b\u677e\u4e0b\u8f7d \u76f8\u5173\u6280\u672f\u548c\u5de5\u5177","title":"\u529f\u80fd\u7279\u6027"},{"location":"ch03-features/#_1","text":"\u53ef\u4ee5\u8fd0\u884c\u4efb\u4f55python\u811a\u672c \u811a\u672c\u53c2\u6570\u53ef\u8c03\u6574 \u811a\u672c\u53ef\u91cd\u590d\u8fd0\u884c\uff0c\u53ef\u67e5\u770b\u7ba1\u7406\u5386\u53f2\u7ed3\u679c \u826f\u597d\u7684\u4ea4\u4e92\uff0c\u7f8e\u89c2\u7684\u754c\u9762 \u826f\u597d\u7684\u7b97\u6cd5\u53ef\u89c6\u5316\u6548\u679c \u65b9\u4fbf\u7684\u540e\u53f0\u7ba1\u7406 \u57fa\u4e8eB/S\uff0c\u90e8\u7f72\u540e\u968f\u5904\u53ef\u8bbf\u95ee \u652f\u6301\u591a\u7528\u6237\u8bbf\u95ee\uff0c\u8fd0\u884c\u7ed3\u679c\u4e92\u4e0d\u5e72\u6270 \u5b8c\u5168\u5f00\u6e90\uff0c\u65b9\u4fbf\u6269\u5c55\u5f00\u53d1 \u8fd0\u884c\u7ed3\u679c\u6587\u4ef6\u8f7b\u677e\u4e0b\u8f7d","title":"\u529f\u80fd\u7279\u6027"},{"location":"ch03-features/#_2","text":"","title":"\u76f8\u5173\u6280\u672f\u548c\u5de5\u5177"},{"location":"ch04-QA/","text":"\u5e38\u89c1\u95ee\u9898 Q1. UnicodeDecodeError: 'gbk' codec can't decode byte 0x80 in position xxx: illegal multibyte sequence \u4e0a\u9762\u8868\u793a\u811a\u672c\u4e2d\u542b\u6709 gbk \u7f16\u7801\u7684\u5b57\u7b26\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c\u6dfb\u52a0\u7684\u811a\u672c\u4e2d\u4e0d\u80fd\u6709\u4e2d\u6587\uff08\u8fd9\u662f\u4e00\u4e2abug\uff0c\u76ee\u524d\u8fd8\u6ca1\u4fee\u590d\uff09\uff0c\u4e2d\u6587\u4e0d\u80fd\u5b58\u5728\u4e8epython\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u5305\u62ec\u6ce8\u91ca\u4e2d\u3002\u6240\u4ee5\u9700\u8981\u68c0\u67e5\u4ee3\u7801\uff0c\u5c06\u76f8\u5e94\u7684\u5b57\u7b26\u5220\u9664\u6216\u8005\u66ff\u6362\u6210\u82f1\u6587\u3002 Q2. \u5982\u4f55\u4e3a\u811a\u672c\u589e\u52a0\u53c2\u6570\u63a7\u5236\uff1f \u7a0b\u5e8f\u901a\u8fc7 argparse \u6765\u8fdb\u884c\u53c2\u6570\u8c03\u8282\u548c\u89e3\u6790\uff0c\u4e0b\u65b9\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a // a_plus_b.py import argparse import sys # parser and arguments parser = argparse.ArgumentParser(description='a plus b problem') parser.add_argument('--a', help='first num', type=int, default=0) parser.add_argument('--b', help='second num', type=int, default=0) def main(): args = parser.parse_args() a = args.a b = args.b sum = a + b print('{0} + {1} = {2}'.format(a, b, sum)) return 0 if __name__ == \"__main__\": sys.exit(main()) #main() \u4f60\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u6765\u8fd0\u884c\uff0c python a_plus_b.py >>> 0 python a_plus_b.py --a 1 --b 2 >>> 3 \u9879\u76ee\u4e2d\u66f4\u6539\u811a\u672c\u53c2\u6570\u7684\u903b\u8f91\u548c\u4e0a\u9762\u4e00\u81f4\u3002 \u5173\u4e8e argparse \uff0c \u67e5\u770b\u66f4\u591a \u3002 Q3. \u7b97\u6cd5\u53ef\u89c6\u5316\u4e2d\u7684\u52a8\u753b\u662f\u5982\u4f55\u505a\u5230\u7684\uff1f \u52a8\u753b\u4f7f\u7528\u7684\u662f Matplotlib \u4e2d\u7684 animation \u3002 \u4f8b\u5982\u672c\u9879\u76ee\u4e2d \u53cc\u56e0\u7d20\u65cb\u5347\u6cd5 \uff0c\u4e8c\u7ef4\u52a8\u753b\u751f\u6210\uff0c\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff0c def init2D(): line.set_data([], []) point.set_data([], []) value_display.set_text('') return line, point, value_display def animate2D(i): line.set_data(track_x[i], track_y[i]) point.set_data(track_x[i], track_y[i]) # point.set_data(track_x[i], track_y[i], track_z[i]) value_display.set_text('Iteration: ' + str(i + 1) + '\\n' r'$x(\\alpha_1)= $' '{0:.4f}'.format( track_x[i][1]) + r' $x(\\alpha_2)= $' '{0:.4f}'.format( track_x[i][2]) + '\\n' r'$y(\\alpha_1)= $' '{0:.4f}'.format( track_y[i][1]) + r' $y(\\alpha_2)= $' '{0:.4f}'.format( track_y[i][2]) + '\\n' r'$z(\\alpha_1)= $' '{0:.4f}'.format( track_z[i][1]) + r' $z(\\alpha_2)= $' '{0:.4f}'.format( track_z[i][2]) ) return line, point, value_display # 2D fig = plt.figure(figsize=(8, 8)) # ax1 = Axes3D(fig) ax1 = plt.gca() ax1 = snapshot2D(ax1) line, = ax1.plot([], [], 'r', label='Domain', lw=1.5) point, = ax1.plot([], [], 'bo', c='b', label='Experiments') value_display = ax1.text(0.02, 0.08, '', transform=ax1.transAxes) ax1.legend(loc=1) ax1.grid(False) anim2D = animation.FuncAnimation(fig, animate2D, init_func=init2D, frames=len(track_x), interval=500, repeat_delay=80, blit=True) Writer2D = animation.writers['ffmpeg'] FPS_2D = 5 writer2D = Writer2D(fps=FPS_2D, metadata=dict(artist='L'), bitrate=1800) # anim.save('Orthogonal-Rotation-004.gif',writer='imagemagick', fps=60) print('Creating 2D Animation VIDEO ...') anim2D.save('Orthogonal-Rotation-2D-fps{0}.mp4'.format(FPS_2D), writer=writer2D) print('Done.\\nCreating 2D Animation GIF ...') anim2D.save('Orthogonal-Rotation-2D-fps{0}.gif'.format(FPS_2D), writer='imagemagick', fps=FPS_2D) print('Done\\n2D Animation Created.') plt.savefig('Orthogonal-Rotation-2D.pdf') plt.savefig('Orthogonal-Rotation-2D.png') \u5176\u4e2d snapshot2D \u4e3a\u751f\u6210\u51fd\u6570\u7684\u7b49\u9ad8\u7ebf\u56fe\uff0c\u5c06 ax \uff08matplotlib\u4e2d\u7684\u5750\u6807\u8f74\u7c7b\uff09\u7684\u5bf9\u8c61\u4f20\u56de\uff0c\u518d\u5728\u8be5\u8f74\u4e0a\u7ed8\u5236\u5176\u4ed6\u56fe\u50cf\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u7ed8\u5236\u3002 def snapshot2D(ax): a = np.linspace(scope_x[0] - 0.2, scope_x[1] + 0.2, num_divs) b = np.linspace(scope_y[0] - 0.2, scope_y[1] + 0.2, num_divs) x, y = np.meshgrid(a, b) # z=func(x,y) # ax.contour(x, y,z, levels=np.logspace(-3,3,25), cmap='jet') ax.contourf(x, y, func(x, y), 50, cmap=cm.hot, alpha=0.7) CS = ax.contour(x, y, func(x, y), 15, colors='k') ax.clabel(CS, inline=True, fontsize=13) ax.set_xlabel(r'x', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_ylabel(r'y', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_title(r'Orthogonal Rotation Analysis $f(x,y)$', fontdict={'fontsize': 20, 'fontweight': 'medium'}) ax.xaxis.set_tick_params(labelsize=18) ax.yaxis.set_tick_params(labelsize=18) # ax.plot(final_x, final_y, marker='*', c='r', markersize=15) ax.scatter(final_x, final_y, marker='*', c='r', s=50, label='Final Result') return ax 3D\u7684\u52a8\u753b\u751f\u6210\u903b\u8f91\u76f8\u540c\u3002 def init3D(): line.set_data([], []) line.set_3d_properties([]) point.set_data([], []) point.set_3d_properties([]) point1.set_data([], []) point1.set_3d_properties([]) point2.set_data([], []) point2.set_3d_properties([]) point3.set_data([], []) point3.set_3d_properties([]) display_value.set_text('') # return line, point, display_value return line, point, point1, point2, point3, display_value def animate3D(i): line.set_data(track_x[i], track_y[i]) line.set_3d_properties(track_z[i]) point.set_data(track_x[i], track_y[i]) point.set_3d_properties(track_z[i]) point1.set_data(track_x[i], track_y[i]) point1.set_3d_properties([-0.5] * len(track_x[i])) # point2.set_data(scope_x[0]* len(track_x[i]), track_y[i]) # a bug here # point2.set_3d_properties(track_z[i]) point2.set_data([scope_x[0] - 0.3] * len(track_x[i]), track_y[i]) point2.set_3d_properties(track_z[i]) point3.set_data(track_x[i], [scope_y[1] + 0.3] * len(track_x[i])) point3.set_3d_properties(track_z[i]) display_value.set_text('Iteration: ' + str(i + 1) + '\\n' r'$x(\\alpha_1)= $' '{0:.4f}'.format(track_x[i][1]) + r' $x(\\alpha_2)= $' '{0:.4f}'.format( track_x[i][2]) + '\\n' r'$y(\\alpha_1)= $' '{0:.4f}'.format(track_y[i][1]) + r' $y(\\alpha_2)= $' '{0:.4f}'.format( track_y[i][2]) + '\\n' r'$z(\\alpha_1)= $' '{0:.4f}'.format(track_z[i][1]) + r' $z(\\alpha_2)= $' '{0:.4f}'.format( track_z[i][2])) # return line, point, display_value return line, point, point1, point2, point3, display_value # 3D fig1 = plt.figure(figsize=(8, 8)) ax2 = Axes3D(fig1) ax2 = snapshot3D(ax2) line, = ax2.plot([], [], [], 'r-', label='Domain', lw=1.5) point, = ax2.plot([], [], [], 'bo', markersize=10, label='Experiments') # on the surface point1, = ax2.plot([], [], [], 'ro', markersize=10, alpha=0.2) # projection to z point2, = ax2.plot([], [], [], 'ro', markersize=10, alpha=0.2) # projection to x point3, = ax2.plot([], [], [], 'ro', markersize=10, alpha=0.2) # projection to y display_value = ax2.text(scope_x[1], scope_y[1], final_z + 0.5, '', transform=ax2.transAxes) ax2.grid(False) ax2.legend(loc=1) anim = animation.FuncAnimation(fig1, animate3D, init_func=init3D, frames=len(track_x), interval=1000, repeat_delay=80, blit=True) Writer3D = animation.writers['ffmpeg'] FPS_3D = 5 writer3D = Writer3D(fps=FPS_3D, metadata=dict(artist='L'), bitrate=1800) # anim.save('Orthogonal-Rotation-004.gif',writer='imagemagick', fps=6) print('Creating 3D Animation VIDEO ...') anim.save('Orthogonal-Rotation-3D-fps{0}.mp4'.format(FPS_3D), writer=writer3D) print('Done.\\nCreating 3D Animation GIF ...') anim.save('Orthogonal-Rotation-3D-fps{0}.gif'.format(FPS_3D), writer='imagemagick', fps=FPS_3D) print('Done\\n3D Animation Created.') plt.savefig('Orthogonal-Rotation-3D.pdf') plt.savefig('Orthogonal-Rotation-3D.png') # plt.show() \u5176\u4e2d `snapshot3D : def snapshot3D(ax): a = np.linspace(scope_x[0] - 0.2, scope_x[1] + 0.2, num_divs) b = np.linspace(scope_y[0] - 0.2, scope_y[1] + 0.2, num_divs) X, Y = np.meshgrid(a, b) Z = func(X, Y) # ax.plot_surface(X, Y, Z, rstride=1, cstride=1, edgecolor='none', cmap='jet') ax.plot_wireframe(X, Y, Z, rstride=1, cstride=1, cmap='jet') cset = ax.contourf(X, Y, Z, zdir='z', offset=-0.5, cmap='jet', alpha=0.2) cset = ax.contourf(X, Y, Z, zdir='x', offset=scope_x[0] - 0.3, cmap='jet', alpha=0.2) cset = ax.contourf(X, Y, Z, zdir='y', offset=scope_y[1] + 0.3, cmap='jet', alpha=0.2) # CS = ax.contour(x, y, func(x, y), colors='k') # ax.clabel(CS, inline=True, fontsize=13) ax.set_xlabel(r'X', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_ylabel(r'Y', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_ylabel(r'Z', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_title(r'Orthogonal Rotation Analysis $f(x,y)$ 3D', fontdict={'fontsize': 20, 'fontweight': 'medium'}) ax.xaxis.set_tick_params(labelsize=18) ax.yaxis.set_tick_params(labelsize=18) # ax.plot([final_x], [final_y], [final_z], marker='*', c='r', markersize=20, label='Final result') ax.scatter([final_x], [final_y], [final_z], marker='*', c='r', s=80, label='Final result') # ax.plot(track_x[0], track_y[0], c='b', marker='o') return ax \u5176\u4f59\u7b97\u6cd5\u53ef\u89c6\u5316\u7684\u903b\u8f91\u7c7b\u4f3c\uff0c\u603b\u4f53\u4e3a\uff1a \u5f04\u6e05\u8981\u89e3\u51b3\u7684\u95ee\u9898 \u8bbe\u8ba1\u5b9e\u73b0\u76f8\u5e94\u7b97\u6cd5 \u5c06\u6570\u636e\u8fc7\u7a0b\u4e2d\u7684\u4efb\u610f\u70b9\u8fdb\u884c\u53ef\u89c6\u5316 \u5c06\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4ee5\u52a8\u753b\u5f62\u5f0f\u8868\u73b0\u51fa\u6765 \u66f4\u591a\u7684\u5173\u4e8e\u4ee3\u7801\uff0c\u540e\u7eed\u4f1a\u4ee5 \u535a\u5ba2\u6587\u7ae0 \u7684\u5f62\u5f0f\u8fdb\u884c\u8bb2\u89e3\uff0c\u4e0d\u5728\u672c\u9879\u76ee\u7684\u8ba8\u8bba\u8303\u56f4\u4e4b\u4e2d\u3002 Q4. \u5982\u4f55\u751f\u6210\u7684\u89c6\u9891\u8fd8\u6709.gif\u56fe\uff1f gif \u548c mp3 \u5206\u522b\u7528\u5230\u4e86 imagemagick \u548c ffmpeg \u3002 \u5173\u4e8e imagemagick \uff0c\u70b9\u51fb \u8fd9\u91cc \u83b7\u53d6\u66f4\u591a\u5e2e\u52a9\u3002 \u5173\u4e8e ffmepeg \uff0c\u70b9\u51fb \u8fd9\u91cc \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 Q5. \u7cfb\u7edf\u5982\u4f55\u5c06python\u811a\u672c\u6267\u884c\u7684\u7ed3\u679c\u663e\u793a\u5230\u524d\u7aef\u7684\uff1f\u5982\u4f55\u4fee\u6539\uff1f \u524d\u7aef\u91c7\u7528HTML+JavaScript+CSS\u6765\u63a7\u5236\uff0c\u540e\u7aef\u662fSQLite\u6570\u636e\u5e93\u3002\u5c06\u7ed3\u679c\u6587\u4ef6\u663e\u793a\u5230\u524d\u7aef\u5229\u7528\u7684\u662fDjango\u6846\u67b6\u7684ORM\uff08\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u673a\u5236\u548cMVT\uff08\u6a21\u578b\uff0c\u89c6\u56fe\uff0c\u6a21\u677f\uff09\u8bbe\u8ba1\u6a21\u5f0f\uff08\u5373\u7ecf\u5178\u7684MVC\u8bbe\u8ba1\u6a21\u5f0f\uff09\uff0c view \u5c42\u901a\u8fc7\u4ece Model \u4e2d\u53d6\u76f8\u5e94\u7684\u7ed3\u679c\u6587\u4ef6\u7684\u5730\u5740\uff0c\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u4f20\u5165\u5230 Template \u5c42\uff0c\u7ecf\u8fc7\u524d\u7aef\u7684\u6e32\u67d3\uff0c\u4ece\u800c\u5f97\u5230\u663e\u793a\u6548\u679c\u3002\u6545\u8981\u5355\u5355\u4fee\u6539\u524d\u7aef\u98ce\u683c\uff0c\u5e03\u5c40\u4ec0\u4e48\u7684\uff0c\u53ea\u9700\u8981\u4fee\u6539 template \u5373\u53ef\uff0c\u4fee\u6539\u5176\u4ed6\u5219\u9700\u8981\u66f4\u5177 view \u7684\u529f\u80fd\u6765\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u3002","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"ch04-QA/#_1","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"ch04-QA/#q1-unicodedecodeerror-gbk-codec-cant-decode-byte-0x80-in-position-xxx-illegal-multibyte-sequence","text":"\u4e0a\u9762\u8868\u793a\u811a\u672c\u4e2d\u542b\u6709 gbk \u7f16\u7801\u7684\u5b57\u7b26\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c\u6dfb\u52a0\u7684\u811a\u672c\u4e2d\u4e0d\u80fd\u6709\u4e2d\u6587\uff08\u8fd9\u662f\u4e00\u4e2abug\uff0c\u76ee\u524d\u8fd8\u6ca1\u4fee\u590d\uff09\uff0c\u4e2d\u6587\u4e0d\u80fd\u5b58\u5728\u4e8epython\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u5305\u62ec\u6ce8\u91ca\u4e2d\u3002\u6240\u4ee5\u9700\u8981\u68c0\u67e5\u4ee3\u7801\uff0c\u5c06\u76f8\u5e94\u7684\u5b57\u7b26\u5220\u9664\u6216\u8005\u66ff\u6362\u6210\u82f1\u6587\u3002","title":"Q1. UnicodeDecodeError: 'gbk' codec can't decode byte 0x80 in position xxx: illegal multibyte sequence"},{"location":"ch04-QA/#q2","text":"\u7a0b\u5e8f\u901a\u8fc7 argparse \u6765\u8fdb\u884c\u53c2\u6570\u8c03\u8282\u548c\u89e3\u6790\uff0c\u4e0b\u65b9\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a // a_plus_b.py import argparse import sys # parser and arguments parser = argparse.ArgumentParser(description='a plus b problem') parser.add_argument('--a', help='first num', type=int, default=0) parser.add_argument('--b', help='second num', type=int, default=0) def main(): args = parser.parse_args() a = args.a b = args.b sum = a + b print('{0} + {1} = {2}'.format(a, b, sum)) return 0 if __name__ == \"__main__\": sys.exit(main()) #main() \u4f60\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u6765\u8fd0\u884c\uff0c python a_plus_b.py >>> 0 python a_plus_b.py --a 1 --b 2 >>> 3 \u9879\u76ee\u4e2d\u66f4\u6539\u811a\u672c\u53c2\u6570\u7684\u903b\u8f91\u548c\u4e0a\u9762\u4e00\u81f4\u3002 \u5173\u4e8e argparse \uff0c \u67e5\u770b\u66f4\u591a \u3002","title":"Q2. \u5982\u4f55\u4e3a\u811a\u672c\u589e\u52a0\u53c2\u6570\u63a7\u5236\uff1f"},{"location":"ch04-QA/#q3","text":"\u52a8\u753b\u4f7f\u7528\u7684\u662f Matplotlib \u4e2d\u7684 animation \u3002 \u4f8b\u5982\u672c\u9879\u76ee\u4e2d \u53cc\u56e0\u7d20\u65cb\u5347\u6cd5 \uff0c\u4e8c\u7ef4\u52a8\u753b\u751f\u6210\uff0c\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff0c def init2D(): line.set_data([], []) point.set_data([], []) value_display.set_text('') return line, point, value_display def animate2D(i): line.set_data(track_x[i], track_y[i]) point.set_data(track_x[i], track_y[i]) # point.set_data(track_x[i], track_y[i], track_z[i]) value_display.set_text('Iteration: ' + str(i + 1) + '\\n' r'$x(\\alpha_1)= $' '{0:.4f}'.format( track_x[i][1]) + r' $x(\\alpha_2)= $' '{0:.4f}'.format( track_x[i][2]) + '\\n' r'$y(\\alpha_1)= $' '{0:.4f}'.format( track_y[i][1]) + r' $y(\\alpha_2)= $' '{0:.4f}'.format( track_y[i][2]) + '\\n' r'$z(\\alpha_1)= $' '{0:.4f}'.format( track_z[i][1]) + r' $z(\\alpha_2)= $' '{0:.4f}'.format( track_z[i][2]) ) return line, point, value_display # 2D fig = plt.figure(figsize=(8, 8)) # ax1 = Axes3D(fig) ax1 = plt.gca() ax1 = snapshot2D(ax1) line, = ax1.plot([], [], 'r', label='Domain', lw=1.5) point, = ax1.plot([], [], 'bo', c='b', label='Experiments') value_display = ax1.text(0.02, 0.08, '', transform=ax1.transAxes) ax1.legend(loc=1) ax1.grid(False) anim2D = animation.FuncAnimation(fig, animate2D, init_func=init2D, frames=len(track_x), interval=500, repeat_delay=80, blit=True) Writer2D = animation.writers['ffmpeg'] FPS_2D = 5 writer2D = Writer2D(fps=FPS_2D, metadata=dict(artist='L'), bitrate=1800) # anim.save('Orthogonal-Rotation-004.gif',writer='imagemagick', fps=60) print('Creating 2D Animation VIDEO ...') anim2D.save('Orthogonal-Rotation-2D-fps{0}.mp4'.format(FPS_2D), writer=writer2D) print('Done.\\nCreating 2D Animation GIF ...') anim2D.save('Orthogonal-Rotation-2D-fps{0}.gif'.format(FPS_2D), writer='imagemagick', fps=FPS_2D) print('Done\\n2D Animation Created.') plt.savefig('Orthogonal-Rotation-2D.pdf') plt.savefig('Orthogonal-Rotation-2D.png') \u5176\u4e2d snapshot2D \u4e3a\u751f\u6210\u51fd\u6570\u7684\u7b49\u9ad8\u7ebf\u56fe\uff0c\u5c06 ax \uff08matplotlib\u4e2d\u7684\u5750\u6807\u8f74\u7c7b\uff09\u7684\u5bf9\u8c61\u4f20\u56de\uff0c\u518d\u5728\u8be5\u8f74\u4e0a\u7ed8\u5236\u5176\u4ed6\u56fe\u50cf\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u7ed8\u5236\u3002 def snapshot2D(ax): a = np.linspace(scope_x[0] - 0.2, scope_x[1] + 0.2, num_divs) b = np.linspace(scope_y[0] - 0.2, scope_y[1] + 0.2, num_divs) x, y = np.meshgrid(a, b) # z=func(x,y) # ax.contour(x, y,z, levels=np.logspace(-3,3,25), cmap='jet') ax.contourf(x, y, func(x, y), 50, cmap=cm.hot, alpha=0.7) CS = ax.contour(x, y, func(x, y), 15, colors='k') ax.clabel(CS, inline=True, fontsize=13) ax.set_xlabel(r'x', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_ylabel(r'y', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_title(r'Orthogonal Rotation Analysis $f(x,y)$', fontdict={'fontsize': 20, 'fontweight': 'medium'}) ax.xaxis.set_tick_params(labelsize=18) ax.yaxis.set_tick_params(labelsize=18) # ax.plot(final_x, final_y, marker='*', c='r', markersize=15) ax.scatter(final_x, final_y, marker='*', c='r', s=50, label='Final Result') return ax 3D\u7684\u52a8\u753b\u751f\u6210\u903b\u8f91\u76f8\u540c\u3002 def init3D(): line.set_data([], []) line.set_3d_properties([]) point.set_data([], []) point.set_3d_properties([]) point1.set_data([], []) point1.set_3d_properties([]) point2.set_data([], []) point2.set_3d_properties([]) point3.set_data([], []) point3.set_3d_properties([]) display_value.set_text('') # return line, point, display_value return line, point, point1, point2, point3, display_value def animate3D(i): line.set_data(track_x[i], track_y[i]) line.set_3d_properties(track_z[i]) point.set_data(track_x[i], track_y[i]) point.set_3d_properties(track_z[i]) point1.set_data(track_x[i], track_y[i]) point1.set_3d_properties([-0.5] * len(track_x[i])) # point2.set_data(scope_x[0]* len(track_x[i]), track_y[i]) # a bug here # point2.set_3d_properties(track_z[i]) point2.set_data([scope_x[0] - 0.3] * len(track_x[i]), track_y[i]) point2.set_3d_properties(track_z[i]) point3.set_data(track_x[i], [scope_y[1] + 0.3] * len(track_x[i])) point3.set_3d_properties(track_z[i]) display_value.set_text('Iteration: ' + str(i + 1) + '\\n' r'$x(\\alpha_1)= $' '{0:.4f}'.format(track_x[i][1]) + r' $x(\\alpha_2)= $' '{0:.4f}'.format( track_x[i][2]) + '\\n' r'$y(\\alpha_1)= $' '{0:.4f}'.format(track_y[i][1]) + r' $y(\\alpha_2)= $' '{0:.4f}'.format( track_y[i][2]) + '\\n' r'$z(\\alpha_1)= $' '{0:.4f}'.format(track_z[i][1]) + r' $z(\\alpha_2)= $' '{0:.4f}'.format( track_z[i][2])) # return line, point, display_value return line, point, point1, point2, point3, display_value # 3D fig1 = plt.figure(figsize=(8, 8)) ax2 = Axes3D(fig1) ax2 = snapshot3D(ax2) line, = ax2.plot([], [], [], 'r-', label='Domain', lw=1.5) point, = ax2.plot([], [], [], 'bo', markersize=10, label='Experiments') # on the surface point1, = ax2.plot([], [], [], 'ro', markersize=10, alpha=0.2) # projection to z point2, = ax2.plot([], [], [], 'ro', markersize=10, alpha=0.2) # projection to x point3, = ax2.plot([], [], [], 'ro', markersize=10, alpha=0.2) # projection to y display_value = ax2.text(scope_x[1], scope_y[1], final_z + 0.5, '', transform=ax2.transAxes) ax2.grid(False) ax2.legend(loc=1) anim = animation.FuncAnimation(fig1, animate3D, init_func=init3D, frames=len(track_x), interval=1000, repeat_delay=80, blit=True) Writer3D = animation.writers['ffmpeg'] FPS_3D = 5 writer3D = Writer3D(fps=FPS_3D, metadata=dict(artist='L'), bitrate=1800) # anim.save('Orthogonal-Rotation-004.gif',writer='imagemagick', fps=6) print('Creating 3D Animation VIDEO ...') anim.save('Orthogonal-Rotation-3D-fps{0}.mp4'.format(FPS_3D), writer=writer3D) print('Done.\\nCreating 3D Animation GIF ...') anim.save('Orthogonal-Rotation-3D-fps{0}.gif'.format(FPS_3D), writer='imagemagick', fps=FPS_3D) print('Done\\n3D Animation Created.') plt.savefig('Orthogonal-Rotation-3D.pdf') plt.savefig('Orthogonal-Rotation-3D.png') # plt.show() \u5176\u4e2d `snapshot3D : def snapshot3D(ax): a = np.linspace(scope_x[0] - 0.2, scope_x[1] + 0.2, num_divs) b = np.linspace(scope_y[0] - 0.2, scope_y[1] + 0.2, num_divs) X, Y = np.meshgrid(a, b) Z = func(X, Y) # ax.plot_surface(X, Y, Z, rstride=1, cstride=1, edgecolor='none', cmap='jet') ax.plot_wireframe(X, Y, Z, rstride=1, cstride=1, cmap='jet') cset = ax.contourf(X, Y, Z, zdir='z', offset=-0.5, cmap='jet', alpha=0.2) cset = ax.contourf(X, Y, Z, zdir='x', offset=scope_x[0] - 0.3, cmap='jet', alpha=0.2) cset = ax.contourf(X, Y, Z, zdir='y', offset=scope_y[1] + 0.3, cmap='jet', alpha=0.2) # CS = ax.contour(x, y, func(x, y), colors='k') # ax.clabel(CS, inline=True, fontsize=13) ax.set_xlabel(r'X', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_ylabel(r'Y', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_ylabel(r'Z', fontdict={'fontsize': 18, 'fontweight': 'medium'}) ax.set_title(r'Orthogonal Rotation Analysis $f(x,y)$ 3D', fontdict={'fontsize': 20, 'fontweight': 'medium'}) ax.xaxis.set_tick_params(labelsize=18) ax.yaxis.set_tick_params(labelsize=18) # ax.plot([final_x], [final_y], [final_z], marker='*', c='r', markersize=20, label='Final result') ax.scatter([final_x], [final_y], [final_z], marker='*', c='r', s=80, label='Final result') # ax.plot(track_x[0], track_y[0], c='b', marker='o') return ax \u5176\u4f59\u7b97\u6cd5\u53ef\u89c6\u5316\u7684\u903b\u8f91\u7c7b\u4f3c\uff0c\u603b\u4f53\u4e3a\uff1a \u5f04\u6e05\u8981\u89e3\u51b3\u7684\u95ee\u9898 \u8bbe\u8ba1\u5b9e\u73b0\u76f8\u5e94\u7b97\u6cd5 \u5c06\u6570\u636e\u8fc7\u7a0b\u4e2d\u7684\u4efb\u610f\u70b9\u8fdb\u884c\u53ef\u89c6\u5316 \u5c06\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4ee5\u52a8\u753b\u5f62\u5f0f\u8868\u73b0\u51fa\u6765 \u66f4\u591a\u7684\u5173\u4e8e\u4ee3\u7801\uff0c\u540e\u7eed\u4f1a\u4ee5 \u535a\u5ba2\u6587\u7ae0 \u7684\u5f62\u5f0f\u8fdb\u884c\u8bb2\u89e3\uff0c\u4e0d\u5728\u672c\u9879\u76ee\u7684\u8ba8\u8bba\u8303\u56f4\u4e4b\u4e2d\u3002","title":"Q3. \u7b97\u6cd5\u53ef\u89c6\u5316\u4e2d\u7684\u52a8\u753b\u662f\u5982\u4f55\u505a\u5230\u7684\uff1f"},{"location":"ch04-QA/#q4-gif","text":"gif \u548c mp3 \u5206\u522b\u7528\u5230\u4e86 imagemagick \u548c ffmpeg \u3002 \u5173\u4e8e imagemagick \uff0c\u70b9\u51fb \u8fd9\u91cc \u83b7\u53d6\u66f4\u591a\u5e2e\u52a9\u3002 \u5173\u4e8e ffmepeg \uff0c\u70b9\u51fb \u8fd9\u91cc \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"Q4. \u5982\u4f55\u751f\u6210\u7684\u89c6\u9891\u8fd8\u6709.gif\u56fe\uff1f"},{"location":"ch04-QA/#q5-python","text":"\u524d\u7aef\u91c7\u7528HTML+JavaScript+CSS\u6765\u63a7\u5236\uff0c\u540e\u7aef\u662fSQLite\u6570\u636e\u5e93\u3002\u5c06\u7ed3\u679c\u6587\u4ef6\u663e\u793a\u5230\u524d\u7aef\u5229\u7528\u7684\u662fDjango\u6846\u67b6\u7684ORM\uff08\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u673a\u5236\u548cMVT\uff08\u6a21\u578b\uff0c\u89c6\u56fe\uff0c\u6a21\u677f\uff09\u8bbe\u8ba1\u6a21\u5f0f\uff08\u5373\u7ecf\u5178\u7684MVC\u8bbe\u8ba1\u6a21\u5f0f\uff09\uff0c view \u5c42\u901a\u8fc7\u4ece Model \u4e2d\u53d6\u76f8\u5e94\u7684\u7ed3\u679c\u6587\u4ef6\u7684\u5730\u5740\uff0c\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u4f20\u5165\u5230 Template \u5c42\uff0c\u7ecf\u8fc7\u524d\u7aef\u7684\u6e32\u67d3\uff0c\u4ece\u800c\u5f97\u5230\u663e\u793a\u6548\u679c\u3002\u6545\u8981\u5355\u5355\u4fee\u6539\u524d\u7aef\u98ce\u683c\uff0c\u5e03\u5c40\u4ec0\u4e48\u7684\uff0c\u53ea\u9700\u8981\u4fee\u6539 template \u5373\u53ef\uff0c\u4fee\u6539\u5176\u4ed6\u5219\u9700\u8981\u66f4\u5177 view \u7684\u529f\u80fd\u6765\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u3002","title":"Q5. \u7cfb\u7edf\u5982\u4f55\u5c06python\u811a\u672c\u6267\u884c\u7684\u7ed3\u679c\u663e\u793a\u5230\u524d\u7aef\u7684\uff1f\u5982\u4f55\u4fee\u6539\uff1f"},{"location":"ch05-log/","text":"\u53d8\u66f4\u65e5\u5fd7 \u53d8\u66f4\u65e5\u671f \u7248\u672c \u65b0\u7279\u6027 \u4fee\u8ba2\u8005 2019-01-09 V0.2\uff08\u4ee3\u53f7\uff1a\u708e\uff09 \u5b9e\u73b0\u4e86\u5bf9\u4e8e\u4f18\u9009\u6cd5\u7684\u53ef\u89c6\u5316\uff0c\u6784\u5efa\u4e86\u57fa\u4e8epython web\u6846\u67b6\u7684\u53ef\u89c6\u5316\u7528\u6237\u754c\u9762\u3002 \u9b54\u6cd5\u5e08L","title":"\u53d8\u66f4\u65e5\u5fd7"},{"location":"ch05-log/#_1","text":"\u53d8\u66f4\u65e5\u671f \u7248\u672c \u65b0\u7279\u6027 \u4fee\u8ba2\u8005 2019-01-09 V0.2\uff08\u4ee3\u53f7\uff1a\u708e\uff09 \u5b9e\u73b0\u4e86\u5bf9\u4e8e\u4f18\u9009\u6cd5\u7684\u53ef\u89c6\u5316\uff0c\u6784\u5efa\u4e86\u57fa\u4e8epython web\u6846\u67b6\u7684\u53ef\u89c6\u5316\u7528\u6237\u754c\u9762\u3002 \u9b54\u6cd5\u5e08L","title":"\u53d8\u66f4\u65e5\u5fd7"}]}